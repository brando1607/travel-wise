// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  BLOCKED
  INACTIVE
  SUSPENDED
}

enum NameChangeStatus {
  DONE
  REJECTED
  PENDING
}

model Users {
  memberNumber       Int                    @id
  name               String
  lastName           String
  hashedEmail        String                 @unique
  encryptedEmail     String
  dateOfBirth        DateTime //date input in front end
  country            String //from drop down list in front end
  status             Status?                @default(ACTIVE)
  bookings           String[]               @default([])
  PendingNameChanges Pending_name_changes[]

  @@map("users")
}

model Pending_name_changes {
  id               Int              @id @default(autoincrement())
  memberNumber     Int
  originalName     String?
  newName          String?
  originalLastName String?
  newLastName      String?
  status           NameChangeStatus @default(PENDING)
  user             Users            @relation(fields: [memberNumber], references: [memberNumber], onDelete: Cascade)

  @@map("pending_name_changes")
}
